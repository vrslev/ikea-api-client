[tool.poetry]
name = "ikea_api"
version = "1.2.0"
description = "Client for several IKEA's APIs"
authors = ["Lev Vereshchagin <mail@vrslev.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/vrslev/ikea-api-client"
keywords = ["ikea", "ikea api", "api", "api client"]
classifiers = [
  "Development Status :: 3 - Alpha",
  "Programming Language :: Python :: Implementation :: CPython",
  "Natural Language :: English",
  "Typing :: Typed"
]
include = ["src/ikea_api/py.typed"]

[tool.poetry.dependencies]
python = "^3.8"
typing-extensions = {version = "^4.0.0", python = "<3.10"}
requests = {version = "*", optional = true}
pydantic = {version = ">=1.8.0<2", optional = true}
httpx = {version = ">=0.22.0<1", optional = true}

[tool.poetry.dev-dependencies]
pytest = "7.0.1"
pytest-asyncio = "0.18.1"
pytest-cov = "3.0.0"
black = {version = "22.1.0"}
pre-commit = "2.17.0"

[tool.poetry.extras]
wrappers = ["pydantic"]
requests = ["requests"]
httpx = ["httpx"]
all = ["pydantic", "requests", "httpx"]

[tool.poetry-version-plugin]
source = "git-tag"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
target-version = ["py38", "py39", "py310"]

[tool.isort]
profile = "black"

[tool.pyright]
typeCheckingMode = "strict"
pythonVersion = "3.8"
reportMissingTypeStubs = false
reportPrivateUsage = false
reportImportCycles = false
# reportUnnecessaryTypeIgnoreComment = "warning"

[tool.coverage.report]
skip_covered = true
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "if sys.version_info",
    "if TYPE_CHECKING",
    "@abstractmethod",
    "raise NotImplementedError",
]

[tool.pytest.ini_options]
asyncio_mode = "auto"
filterwarnings = [
  "ignore:Use 'content=<...>' to upload raw bytes/text content",
]
